{"version":3,"sources":["projects/page/ProjectPage.jsx"],"names":["ProjectPage","props","useState","project","setProject","isLoading","setIsLoading","error","setError","projectId","useParams","useEffect","fetch","process","then","response","json","catch","err","message","Fragment","className","msgHeaderClassName","title","onOkButtonClick","value","msgType","name","timePeriod","description","style","margin","width","height","src","video","frameBorder","allow","allowFullScreen"],"mappings":"4LAqDeA,UA9CK,SAAAC,GAAU,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,OAESF,oBAAS,GAFlB,mBAElBG,EAFkB,KAEPC,EAFO,OAGCJ,qBAHD,mBAGlBK,EAHkB,KAGXC,EAHW,KAIjBC,EAAcC,cAAdD,UAERE,qBAAU,WACNL,GAAa,GAEbM,MAAMC,mDAAmDJ,GACxDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAGNX,EAAWW,GACXT,GAAa,MAEZW,OAAM,SAACC,GACJZ,GAAa,GACbE,EAASU,EAAIC,cAGlB,CAACV,IAOJ,OACI,kBAAC,IAAMW,SAAP,KACKf,GAAc,uBAAGgB,UAAU,YAAb,sBACdd,GAAS,kBAAC,IAAD,CAASc,UAAU,yBAAyBC,mBAAmB,QAAQC,MAAM,QAAQC,gBAR7E,SAACC,EAAOC,GAE9BlB,EAASiB,KAM+HlB,GACpI,kBAAC,IAAD,CAAgBc,UAAU,qBACrBlB,EAAQwB,MAEb,yBAAKN,UAAU,aACf,4BAAKlB,EAAQyB,YACb,2BAAIzB,EAAQ0B,aACZ,4BAAQN,MAAOpB,EAAQwB,KAAMG,MAAO,CAACC,OAAQ,QAASC,MAAM,OAAOC,OAAO,MAAMC,IAAK/B,EAAQgC,MAAOC,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe","file":"static/js/6.2fca1d60.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nimport \"./PojectPage.css\";\r\nimport ContentHeading from \"../../shared/Heading/ContentHeading\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Message from \"../../shared/components/Message\";\r\n\r\nconst ProjectPage = props => {\r\n    const [project, setProject] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const { projectId } = useParams();\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        \r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/projects/\" + projectId)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n\r\n\r\n        setProject(response);\r\n        setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n            setIsLoading(false);\r\n            setError(err.message);\r\n        });\r\n\r\n    }, [projectId]);\r\n\r\n    const OkBtnClickHandler = (value, msgType) => {\r\n        //closes message window\r\n        setError(value); \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && (<p className=\"centered\">Loading Project...</p>)}\r\n            {error && <Message className=\"centered error message\" msgHeaderClassName=\"error\" title=\"Error\" onOkButtonClick={OkBtnClickHandler}>{error}</Message>}\r\n            <ContentHeading className=\"heading-container\">\r\n                {project.name}\r\n            </ContentHeading>\r\n            <div className=\"container\">\r\n            <h2>{project.timePeriod}</h2>\r\n            <p>{project.description}</p>\r\n            <iframe title={project.name} style={{margin: \"auto\"}} width=\"100%\" height=\"515\" src={project.video} frameBorder=\"5\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectPage;"],"sourceRoot":""}