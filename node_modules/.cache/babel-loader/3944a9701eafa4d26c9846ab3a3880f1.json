{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Denis\\\\Desktop\\\\Web_Projects\\\\Portfolio_Website\\\\frontend\\\\src\\\\projects\\\\page\\\\ProjectPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./PojectPage.css\";\nimport ContentHeading from \"../../shared/Heading/ContentHeading\";\nimport { useParams } from \"react-router-dom\";\nimport Message from \"../../shared/components/Message\";\nimport { dateFormatted } from \"../../shared/utils/utils.js\";\n\nconst ProjectPage = props => {\n  const [project, setProject] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const {\n    projectId\n  } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/projects/\" + projectId).then(response => response.json()).then(response => {\n      setProject(response);\n      setIsLoading(false);\n    }).catch(err => {\n      setIsLoading(false);\n      setError(err.message);\n    });\n  }, [projectId]);\n\n  const OkBtnClickHandler = (value, msgType) => {\n    //closes message window\n    setError(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }\n  }, \"Loading Project...\"), error && /*#__PURE__*/React.createElement(Message, {\n    className: \"centered error message\",\n    msgHeaderClassName: \"error\",\n    title: \"Error\",\n    onOkButtonClick: OkBtnClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(ContentHeading, {\n    className: \"heading-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, project.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, dateFormatted(new Date(project.timePeriod))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, project.description), project.github.toArray.length !== 0 ? /*#__PURE__*/React.createElement(\"a\", {\n    href: project.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 56\n    }\n  }, \"GitHub Link\") : \"\", /*#__PURE__*/React.createElement(\"iframe\", {\n    title: project.name,\n    style: {\n      margin: \"auto\"\n    },\n    width: \"100%\",\n    height: \"515\",\n    src: project.video,\n    frameBorder: \"5\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["C:/Users/Denis/Desktop/Web_Projects/Portfolio_Website/frontend/src/projects/page/ProjectPage.jsx"],"names":["React","useState","useEffect","ContentHeading","useParams","Message","dateFormatted","ProjectPage","props","project","setProject","isLoading","setIsLoading","error","setError","projectId","fetch","process","env","REACT_APP_BACKEND_URL","then","response","json","catch","err","message","OkBtnClickHandler","value","msgType","name","Date","timePeriod","description","github","toArray","length","margin","video"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAGA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAgBX,SAAS,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAI,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,YAApC,GAAmDJ,SAApD,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AAGlBX,MAAAA,UAAU,CAACW,QAAD,CAAV;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KAPD,EAQCW,KARD,CAQQC,GAAD,IAAS;AACZZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACH,KAXD;AAaH,GAhBQ,EAgBN,CAACV,SAAD,CAhBM,CAAT;;AAkBA,QAAMW,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1C;AACAd,IAAAA,QAAQ,CAACa,KAAD,CAAR;AACH,GAHD;;AAKA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,SAAS,iBAAK;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADnB,EAEKE,KAAK,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAA4C,IAAA,kBAAkB,EAAC,OAA/D;AAAuE,IAAA,KAAK,EAAC,OAA7E;AAAqF,IAAA,eAAe,EAAEa,iBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Hb,KAA1H,CAFd,eAGI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,CAACoB,IADb,CAHJ,eAMI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKvB,aAAa,CAAC,IAAIwB,IAAJ,CAASrB,OAAO,CAACsB,UAAjB,CAAD,CAAlB,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAItB,OAAO,CAACuB,WAAZ,CAFA,EAGGvB,OAAO,CAACwB,MAAT,CAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,CAArC,gBAA0C;AAAG,IAAA,IAAI,EAAE1B,OAAO,CAACwB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA1C,GAAqF,EAHtF,eAIA;AAAQ,IAAA,KAAK,EAAExB,OAAO,CAACoB,IAAvB;AAA6B,IAAA,KAAK,EAAE;AAACO,MAAAA,MAAM,EAAE;AAAT,KAApC;AAAsD,IAAA,KAAK,EAAC,MAA5D;AAAmE,IAAA,MAAM,EAAC,KAA1E;AAAgF,IAAA,GAAG,EAAE3B,OAAO,CAAC4B,KAA7F;AAAoG,IAAA,WAAW,EAAC,GAAhH;AAAoH,IAAA,KAAK,EAAC,yEAA1H;AAAoM,IAAA,eAAe,MAAnN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CANJ,CADJ;AAeH,CA5CD;;AA+CA,eAAe9B,WAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nimport \"./PojectPage.css\";\r\nimport ContentHeading from \"../../shared/Heading/ContentHeading\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Message from \"../../shared/components/Message\";\r\nimport { dateFormatted } from \"../../shared/utils/utils.js\";\r\n\r\nconst ProjectPage = props => {\r\n    const [project, setProject] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const { projectId } = useParams();\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        \r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/projects/\" + projectId)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n\r\n\r\n        setProject(response);\r\n        setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n            setIsLoading(false);\r\n            setError(err.message);\r\n        });\r\n\r\n    }, [projectId]);\r\n\r\n    const OkBtnClickHandler = (value, msgType) => {\r\n        //closes message window\r\n        setError(value); \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && (<p className=\"centered\">Loading Project...</p>)}\r\n            {error && <Message className=\"centered error message\" msgHeaderClassName=\"error\" title=\"Error\" onOkButtonClick={OkBtnClickHandler}>{error}</Message>}\r\n            <ContentHeading className=\"heading-container\">\r\n                {project.name}\r\n            </ContentHeading>\r\n            <div className=\"container\">\r\n            <h2>{dateFormatted(new Date(project.timePeriod))}</h2>\r\n            <p>{project.description}</p>\r\n            {((project.github).toArray.length !== 0) ? <a href={project.github}>GitHub Link</a> : \"\"}\r\n            <iframe title={project.name} style={{margin: \"auto\"}} width=\"100%\" height=\"515\" src={project.video} frameBorder=\"5\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}